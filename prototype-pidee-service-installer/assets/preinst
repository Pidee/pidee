#!/bin/sh

# This script executes before that package will be unpacked from its Debian archive (".deb") file.
# Many 'preinst' scripts stop services for packages which are being upgraded until their 
# installation or upgrade is completed (following the successful execution of the 'postinst' script).

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
# https://www.debian.org/doc/debian-policy/ch-maintainerscripts.html#s6.1

set -e

case "$1" in
    install|upgrade)

        ## Below two methods to sniff for systemd being in use
        ## 1 = good
        ## 0 = bad
        ## these are /dev/null'd because if nothing matches then we have a bad return code and the install fails
        grep_systemd=$(sudo stat /proc/1/exe | grep -cim1 systemd) &> /dev/null
        pidof_systemd=$(pidof systemd && echo 1 || echo 0) &> /dev/null

        ## Check if we are using systemd
        if [ $grep_systemd -eq 1 ] || [ $pidof_systemd -eq 1 ]; then
            ## TODO: should we check for [ hash systemctl 2> /dev/null ] first?

            ## Grep list of available .service(s)
            # pidee_was_here=$(systemctl list-units | grep -cim1 pidee)

            # if [ $pidee_was_here = 1 ]; then
            if [ $1 = upgrade ]; then
                ## Stop the service
                systemctl stop pidee 2> /dev/null

                exit 0
            fi

        ## Or use System 5 init
        else
            ## Stop pidee daemon if it was already installed
            if [ -f /etc/init.d/pidee ];
            then
                service pidee stop

                exit 0
            fi
        fi
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
