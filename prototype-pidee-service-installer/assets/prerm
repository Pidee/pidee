#!/bin/sh

# This script typically stops any daemons which are associated with a package.
# It is executed before the removal of files associated with the package.

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

set -e

case "$1" in
    remove|upgrade|deconfigure)

        ## Check if we are using systemd
        if [ $grep_systemd = 1 ] || [ $pidof_systemd = 1 ]; then
            ## TODO: should we check for [ hash systemctl 2> /dev/null ] first?

            ## Grep list of available .service(s)
            pidee_was_here=$(systemctl list-units | grep -cim1 pidee)

            if [ $pidee_was_here = 1 ]; then
                ## Stop the service
                systemctl stop pidee 2> /dev/null                
            fi

        ## Or use System 5 init
        else
            ## Stop pidee daemon if it was already installed
            if [ -f /etc/init.d/pidee ];
            then
                service pidee stop
            fi
        fi
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
